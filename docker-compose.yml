services:
  #backend database
  db_app:
    image: mysql:8.0
    container_name: db_app
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${APP_DB_PASSWORD}
      MYSQL_DATABASE: ${APP_DB_DATABASE}
    volumes:
      - ./db-init/app:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "mysql -h localhost -uroot -p${APP_DB_PASSWORD} -e 'USE ${APP_DB_DATABASE};'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_app
    restart: unless-stopped
    environment:
      PMA_HOST: ${APP_DB_HOST}
      PMA_PORT: ${APP_DB_PORT}
      PMA_USER: ${APP_DB_USERNAME}
      PMA_PASSWORD: ${APP_DB_PASSWORD}
    ports:
      - "${APP_DB_PMA_PORT}:80"
    depends_on:
      db_app:
        condition: service_healthy

  #audit database
  db_audit:
    image: mysql:8.0
    container_name: db_audit
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${AUDIT_DB_PASSWORD}
      MYSQL_DATABASE: ${AUDIT_DB_DATABASE}
    volumes:
      - ./db-init/audit:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "mysql -h localhost -uroot -p${AUDIT_DB_PASSWORD} -e 'USE ${AUDIT_DB_DATABASE};'"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 30s

  phpmyadmin_audit:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_audit
    restart: unless-stopped
    environment:
      PMA_HOST: ${AUDIT_DB_HOST}
      PMA_PORT: ${AUDIT_DB_PORT}
      PMA_USER: ${AUDIT_DB_USERNAME}
      PMA_PASSWORD: ${AUDIT_DB_PASSWORD}
    ports:
      - "${AUDIT_DB_PMA_PORT}:80"
    depends_on:
      db_audit:
        condition: service_healthy

  #redpanda (kafka broker)
  redpanda:
    image: redpandadata/redpanda:v24.1.5
    container_name: redpanda
    restart: unless-stopped
    command: >
      redpanda start
      --overprovisioned
      --smp 1
      --memory 512M
      --reserve-memory 0M
      --node-id 0
      --check=false
      --kafka-addr PLAINTEXT://0.0.0.0:9092
      --advertise-kafka-addr PLAINTEXT://redpanda:9092
    ports:
      - "${RED_PANDA_PORT}:9092"


  #nestjs production backend
  backend:
    build: ./backend
    #uses the same .env as docker-compose (outside of backend folders)
    env_file:
      - ./.env
    container_name: backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      db_app:
        condition: service_healthy
      db_audit:
        condition: service_healthy
      redpanda:
        condition: service_started

  #frontend admin, nginx serves on 80
  frontend_admin:
    build: ./frontend-admin
    container_name: frontend_admin
    restart: unless-stopped
    ports:
      - "${FRONTEND_ADMIN_PORT}:80"
    depends_on:
      backend:
        condition: service_started

  #frontend employee,nginx serves on 80
  frontend_employee:
    build: ./frontend-employee
    container_name: frontend_employee
    restart: unless-stopped
    ports:
      - "${FRONTEND_EMPLOYEE_PORT}:80"
    depends_on:
      backend:
        condition: service_started
